<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>net9.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>disable</Nullable>
    <Platforms>x64</Platforms>
    <StartupObject>AwesomeOpossum.Program</StartupObject>
    <BaseOutputPath>bin</BaseOutputPath>
    <AppendTargetFrameworkToOutputPath>False</AppendTargetFrameworkToOutputPath>
    <AppendRuntimeIdentifierToOutputPath>False</AppendRuntimeIdentifierToOutputPath>
    
    <DebugType>embedded</DebugType>
    <ProduceReferenceAssembly>False</ProduceReferenceAssembly>
    <GenerateDocumentationFile>False</GenerateDocumentationFile>
    <GenerateAssemblyInfo>True</GenerateAssemblyInfo>
    <GenerateDependencyFile>False</GenerateDependencyFile>

    <EnablePreviewFeatures>True</EnablePreviewFeatures>
    <LangVersion>Latest</LangVersion>
    <AllowUnsafeBlocks>True</AllowUnsafeBlocks>
    
    <Configurations>Debug;Release;Datagen;Avx512</Configurations>
    <EnforceCodeStyleInBuild>False</EnforceCodeStyleInBuild>
    <RunAnalyzersDuringBuild>False</RunAnalyzersDuringBuild>
    <AnalysisLevel>latest-all</AnalysisLevel>

    <PublishTrimmed>True</PublishTrimmed>

    <PublishSingleFile>True</PublishSingleFile>
    <PublishAot>False</PublishAot>

    <!-- ################################################### -->
    <!-- ##########   Good Switches (no touchy)   ########## -->
    <!-- ################################################### -->

    <TieredPGO>true</TieredPGO>
    <TieredCompilation>true</TieredCompilation>

    <!-- ####################################### -->
    <!-- ##########    OK Switches    ########## -->
    <!-- ####################################### -->
    
    <PublishReadyToRun>true</PublishReadyToRun>
    <TieredCompilationQuickJit>true</TieredCompilationQuickJit>
    <TieredCompilationQuickJitForLoops>true</TieredCompilationQuickJitForLoops>
    <ServerGarbageCollection>false</ServerGarbageCollection>

  </PropertyGroup>

  <PropertyGroup>
    <DefineConstants Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Windows)))' == 'true'">$(DefineConstants);IsWindows</DefineConstants>
    <DefineConstants Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Linux)))' == 'true'">$(DefineConstants);IsLinux</DefineConstants>
    <DefineConstants Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::OSX)))' == 'true'">$(DefineConstants);IsOSX</DefineConstants>
  </PropertyGroup>
  

  
  <!-- The "instruction-set" argument is required for AOT to generate code with intrinsics -->
  <ItemGroup>
    <ilcArg Include="--Ot" />
    <IlcArg Condition="$(IlcInstructionSet) == ''" Include="--instruction-set=native" />
  </ItemGroup>


  <!-- Network files are stored with the .bin extension in the network repository.
       If an EVALFILE isn't explicitly given, then we'll try to download the file from the repository, and append .bin to the name given in value.txt
  -->
  <PropertyGroup>
    <EFileExt></EFileExt>
  </PropertyGroup>

  
  <!-- PreBuildEvent is early enough that the EmbedValueFile target works properly
       but late enough that VS doesn't constantly try to download the file
  -->
  <Target Name="SetValueFile" BeforeTargets="PreBuildEvent" Condition="'$(EVALFILE)' == ''">
    <PropertyGroup>
      <EVALFILE>$([System.IO.File]::ReadAllText($(MSBuildThisFileDirectory)value.txt))</EVALFILE>
    </PropertyGroup>
    
    <CreateProperty Value=".bin">
      <Output TaskParameter="Value" PropertyName="EFileExt" />
    </CreateProperty>

    <Message Text="EVALFILE (ValueNetwork) set to $(EVALFILE)" Importance="high" />
  </Target>

  
  <!-- Download the network file if it doesn't already exist, and place it into the current directory
  -->
  <Target Name="DownloadValueFile" AfterTargets="SetValueFile" Condition="!Exists('$(EVALFILE)$(EFileExt)')">
    <PropertyGroup>
      <NetworkFileURL>https://github.com/liamt19/opossum-nets/releases/download/$(EVALFILE)/$(EVALFILE)$(EFileExt)</NetworkFileURL>
    </PropertyGroup>

    <Message Text="Downloading $(NetworkFileURL) into $(MSBuildThisFileDirectory)" Importance="high" />

    <DownloadFile SourceUrl="$(NetworkFileURL)" DestinationFolder="$(MSBuildThisFileDirectory)">
      <Output TaskParameter="DownloadedFile" ItemName="Content" />
    </DownloadFile>
  </Target>

  
  <!-- Embed the file here, after reading network.txt (if EVALFILE wasn't provided) and downloading it (if necessary).
       Also set ValueFileAttribute so we know what the file is named
  -->
  <Target Name="EmbedValueFile" AfterTargets="DownloadValueFile;SetValueFile">
    <Message Text="Embedding $(EVALFILE)$(EFileExt) as a resource" Importance="high" />

    <ItemGroup>
      <EmbeddedResource Include="$(EVALFILE)$(EFileExt)" />
    </ItemGroup>

    <ItemGroup>
      <AssemblyAttribute Include="AwesomeOpossum.Logic.Util.ValueFileAttribute">
        <_Parameter1>$(EVALFILE)$(EFileExt)</_Parameter1>
      </AssemblyAttribute>
    </ItemGroup>
  </Target>



  <!-- Same process for the policy network
  -->
  <Target Name="SetPolicyFile" BeforeTargets="PreBuildEvent" Condition="'$(POLICYFILE)' == ''">
    <PropertyGroup>
      <POLICYFILE>$([System.IO.File]::ReadAllText($(MSBuildThisFileDirectory)policy.txt))</POLICYFILE>
    </PropertyGroup>

    <CreateProperty Value=".bin">
      <Output TaskParameter="Value" PropertyName="EFileExt" />
    </CreateProperty>

    <Message Text="POLICYFILE (PolicyNetwork) set to $(POLICYFILE)" Importance="high" />
  </Target>

  
  <Target Name="DownloadPolicyFiles" AfterTargets="SetPolicyFile" Condition="!Exists('$(POLICYFILE)$(EFileExt)')">
    <PropertyGroup>
      <NetworkFileURL>https://github.com/liamt19/opossum-nets/releases/download/$(POLICYFILE)/$(POLICYFILE)$(EFileExt)</NetworkFileURL>
    </PropertyGroup>

    <Message Text="Downloading $(NetworkFileURL) into $(MSBuildThisFileDirectory)" Importance="high" />

    <DownloadFile SourceUrl="$(NetworkFileURL)" DestinationFolder="$(MSBuildThisFileDirectory)">
      <Output TaskParameter="DownloadedFile" ItemName="Content" />
    </DownloadFile>
  </Target>

  
  <Target Name="EmbedPolicyFile" AfterTargets="DownloadPolicyFiles;SetPolicyFile">
    <Message Text="Embedding $(POLICYFILE)$(EFileExt) as a resource" Importance="high" />

    <ItemGroup>
      <EmbeddedResource Include="$(POLICYFILE)$(EFileExt)" />
    </ItemGroup>

    <ItemGroup>
      <AssemblyAttribute Include="AwesomeOpossum.Logic.Util.PolicyFileAttribute">
        <_Parameter1>$(POLICYFILE)$(EFileExt)</_Parameter1>
      </AssemblyAttribute>
    </ItemGroup>
  </Target>


  <PropertyGroup>
    <BINDINGS>SIMDBindings.dll</BINDINGS>
  </PropertyGroup>
  <!-- Handle SIMD Bindings -->
  <ItemGroup>
    <EmbeddedResource Condition="'$(BINDINGS)' != '' AND Exists('$(BINDINGS)')" Include="$(BINDINGS)" />
  </ItemGroup>
  
  

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <PlatformTarget>x64</PlatformTarget>
    <DefineConstants>$(DefineConstants)</DefineConstants>
    <DebugType>embedded</DebugType>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <PlatformTarget>x64</PlatformTarget>
    <DefineConstants>$(DefineConstants)</DefineConstants>
    <DebugType>embedded</DebugType>
    <Optimize>True</Optimize>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Avx512|x64'">
    <PlatformTarget>x64</PlatformTarget>
    <DefineConstants>$(DefineConstants)</DefineConstants>
    <DebugType>embedded</DebugType>
    <Optimize>True</Optimize>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Datagen|x64'">
    <PlatformTarget>x64</PlatformTarget>
    <DebugType>embedded</DebugType>
    <Optimize>True</Optimize>
  </PropertyGroup>

  <ItemGroup>
    <Compile Remove="Logic\Book\**" />
    <EmbeddedResource Remove="Logic\Book\**" />
    <None Remove="Logic\Book\**" />
  </ItemGroup>

  <ItemGroup>
    <Compile Remove="Logic\Core\PositionRESIZE.cs" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="obj\" />
    <Folder Include="Resources\" />
  </ItemGroup>

  <!-- This is for using Bitmaps -->
  <ItemGroup Condition="'$(Configuration)'=='Debug'">
    <PackageReference Include="System.Drawing.Common" Version="8.0.0" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="ZstdSharp.Port" Version="0.8.1" />
  </ItemGroup>

  <ItemGroup>
    <Compile Update="Properties\Resources.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Update="Properties\Resources.resx">
      <Generator>PublicResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>

</Project>
